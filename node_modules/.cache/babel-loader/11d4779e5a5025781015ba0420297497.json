{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\netflix-clone\\\\src\\\\NetflixClone\\\\Screens\\\\HomeScreen\\\\HomeContent\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../../axios';\nimport './Row.css';\nimport movieTrailer from 'movie-trailer';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = ({\n  title,\n  urlRequest,\n  isLarge\n}) => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const baseURL = 'https://image.tmdb.org/t/p/original/';\n  useEffect(() => {\n    axios.get(urlRequest).then(res => setMovies(res.data.results)).catch(error => console.log(error));\n  }, [urlRequest]);\n\n  const posterClicked = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer(movie.name || movie.title || movie.original_title || movie.original_name || '').then(url => {\n        setTrailerUrl(url);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"row__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => {\n        if (movie.backdrop_path !== null) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${baseURL}${isLarge ? movie.poster_path : movie.backdrop_path}`,\n              onClick: () => posterClicked(movie),\n              alt: movie.name,\n              className: `row__poster ${isLarge ? 'row__largePoster' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 22\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 28\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__trailer\",\n      children: [trailerUrl && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        width: \"100%\",\n        height: \"250px\",\n        url: trailerUrl,\n        playing: true,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 53\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Row, \"zcdNe0Lr8rip4Oj/qSSLGY8Tl3o=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Screens/HomeScreen/HomeContent/Row.js"],"names":["React","useState","useEffect","axios","movieTrailer","ReactPlayer","Row","title","urlRequest","isLarge","movies","setMovies","trailerUrl","setTrailerUrl","baseURL","get","then","res","data","results","catch","error","console","log","posterClicked","movie","name","original_title","original_name","url","err","map","backdrop_path","poster_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAAA;;AAE1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMa,OAAO,GAAG,sCAAhB;AAEAZ,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,KAAK,CAACY,GAAN,CAAUP,UAAV,EACCQ,IADD,CACMC,GAAG,IAAEN,SAAS,CAACM,GAAG,CAACC,IAAJ,CAASC,OAAV,CADpB,EAECC,KAFD,CAEOC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFd;AAGH,GAJQ,EAIP,CAACb,UAAD,CAJO,CAAT;;AAMA,QAAMgB,aAAa,GAAGC,KAAK,IAAI;AAE3B,QAAGb,UAAH,EAAe;AACXC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAFD,MAEO;AACHT,MAAAA,YAAY,CAACqB,KAAK,CAACC,IAAN,IAAcD,KAAK,CAAClB,KAApB,IAA6BkB,KAAK,CAACE,cAAnC,IAAqDF,KAAK,CAACG,aAA3D,IAA2E,EAA5E,CAAZ,CACCZ,IADD,CACMa,GAAG,IAAI;AACThB,QAAAA,aAAa,CAACgB,GAAD,CAAb;AACH,OAHD,EAICT,KAJD,CAIOU,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAJd;AAKH;AAEJ,GAZD;;AAcA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACH;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BvB;AAA5B;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKG,MAAM,CAACqB,GAAP,CAAWN,KAAK,IAAI;AACjB,YAAGA,KAAK,CAACO,aAAN,KAAwB,IAA3B,EAAgC;AAC5B,8BAAO;AAAA,mCAEN;AAAK,cAAA,GAAG,EAAG,GAAElB,OAAQ,GAAEL,OAAO,GAAGgB,KAAK,CAACQ,WAAT,GAAuBR,KAAK,CAACO,aAAe,EAA1E;AAA6E,cAAA,OAAO,EAAE,MAAMR,aAAa,CAACC,KAAD,CAAzG;AACD,cAAA,GAAG,EAAEA,KAAK,CAACC,IADV;AAED,cAAA,SAAS,EAAG,eAAcjB,OAAO,GAAG,kBAAH,GAAwB,EAAG;AAF3D;AAAA;AAAA;AAAA;AAAA;AAFM,aAAUgB,KAAK,CAACS,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAQH;AACJ,OAXA;AADL;AAAA;AAAA;AAAA;AAAA,YAFG,eAiBH;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBAA+BtB,UAAU,iBAAG,QAAC,WAAD;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,MAAM,EAAC,OAAlC;AAA0C,QAAA,GAAG,EAAEA,UAA/C;AAA2D,QAAA,OAAO,EAAE,IAApE;AAA2E,QAAA,QAAQ,EAAE;AAArF;AAAA;AAAA;AAAA;AAAA,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBH,CA/CD;;GAAMN,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, {useState ,useEffect} from 'react'\r\nimport axios from '../../../axios';\r\nimport './Row.css';\r\nimport movieTrailer from 'movie-trailer';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst Row = ({title ,urlRequest, isLarge}) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState('');\r\n    const baseURL = 'https://image.tmdb.org/t/p/original/';\r\n\r\n    useEffect(()=>{\r\n        axios.get(urlRequest)\r\n        .then(res=>setMovies(res.data.results))\r\n        .catch(error=>console.log(error))\r\n    },[urlRequest]);\r\n\r\n    const posterClicked = movie => {\r\n\r\n        if(trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie.name || movie.title || movie.original_title || movie.original_name ||'')\r\n            .then(url => {\r\n                setTrailerUrl(url);\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n\r\n    }\r\n    \r\n    return <div className='row'>\r\n        <h2 className='row__title'>{title}</h2>\r\n        <div className='row__posters'>\r\n            {movies.map(movie => {\r\n                if(movie.backdrop_path !== null){\r\n                    return <div key={movie.id} \r\n                    >\r\n                     <img src={`${baseURL}${isLarge ? movie.poster_path : movie.backdrop_path }`} onClick={() => posterClicked(movie)}\r\n                    alt={movie.name}\r\n                    className={`row__poster ${isLarge ? 'row__largePoster' : ''}`}\r\n                    />\r\n\r\n                    </div>\r\n                }\r\n            }   \r\n            )}\r\n        </div>\r\n        <div className='row__trailer'>{trailerUrl &&<ReactPlayer  width='100%' height='250px' url={trailerUrl} playing={true}  controls={true}/>}  </div>  \r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Row;"]},"metadata":{},"sourceType":"module"}
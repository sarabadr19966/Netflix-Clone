{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\netflix-clone\\\\src\\\\NetflixClone\\\\Netflix.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomeScreen from \"./Screens/HomeScreen/HomeScreen\";\nimport SignInUpScreen from './Screens/SignInUpScreens/SignInUpScreen';\nimport { auth } from '../firebase';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../store/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Netflix = props => {\n  _s();\n\n  useEffect(() => {\n    console.log(props.usr);\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //logged in\n        props.logIn({\n          uID: userAuth.uid,\n          email: userAuth.email\n        });\n      } else {\n        //logged out\n        this.props.logOut();\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignInUpScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n};\n\n_s(Netflix, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Netflix;\n\nconst mapStateToProps = state => {\n  return {\n    usr: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: user => dispatch(actionCreators.login(user)),\n    logOut: () => dispatch(actionCreators.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Netflix);\n\nvar _c;\n\n$RefreshReg$(_c, \"Netflix\");","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Netflix.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","HomeScreen","SignInUpScreen","auth","connect","actionCreators","Netflix","props","console","log","usr","unsubscribe","onAuthStateChanged","userAuth","logIn","uID","uid","email","logOut","mapStateToProps","state","user","mapDispatchToProps","dispatch","login","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvBX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB;AACA,UAAMC,WAAW,GAAGR,IAAI,CAACS,kBAAL,CAAyBC,QAAD,IAAc;AACtD,UAAGA,QAAH,EAAa;AACT;AACAN,QAAAA,KAAK,CAACO,KAAN,CAAY;AACRC,UAAAA,GAAG,EAAGF,QAAQ,CAACG,GADP;AAERC,UAAAA,KAAK,EAAEJ,QAAQ,CAACI;AAFR,SAAZ;AAIH,OAND,MAMO;AACH;AACA,aAAKV,KAAL,CAAWW,MAAX;AACH;AACJ,KAXmB,CAApB;AAYA,WAAOP,WAAP;AACH,GAfQ,EAeP,EAfO,CAAT;AAgBA,sBAEI;AAAA,2BACM,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADN,mBAFJ;AAQH,CAzBD;;GAAML,O;;KAAAA,O;;AA2BN,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,GAAG,EAAGU,KAAK,CAACC;AADT,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHT,IAAAA,KAAK,EAAGO,IAAI,IAAIE,QAAQ,CAAClB,cAAc,CAACmB,KAAf,CAAqBH,IAArB,CAAD,CADrB;AAEHH,IAAAA,MAAM,EAAG,MAAMK,QAAQ,CAAClB,cAAc,CAACoB,MAAf,EAAD;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAerB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,OAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomeScreen from \"./Screens/HomeScreen/HomeScreen\";\r\nimport SignInUpScreen from './Screens/SignInUpScreens/SignInUpScreen';\r\nimport { auth } from '../firebase';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreators from '../store/action';\r\n\r\nconst Netflix = (props) => {\r\n    useEffect(() => {\r\n        console.log(props.usr)\r\n        const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n            if(userAuth) {\r\n                //logged in\r\n                props.logIn({\r\n                    uID : userAuth.uid,\r\n                    email: userAuth.email\r\n                });\r\n            } else {\r\n                //logged out\r\n                this.props.logOut();\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    },[])\r\n    return  (\r\n        \r\n        <>\r\n            { <SignInUpScreen/> \r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usr : state.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logIn : user => dispatch(actionCreators.login(user)),\r\n        logOut : () => dispatch(actionCreators.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Netflix);"]},"metadata":{},"sourceType":"module"}
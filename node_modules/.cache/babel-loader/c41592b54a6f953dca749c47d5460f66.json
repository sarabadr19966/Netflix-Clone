{"ast":null,"code":"import _slicedToArray from\"D:/react/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'../../../axios';import'./Row.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Row=function Row(_ref){var title=_ref.title,urlRequest=_ref.urlRequest,isLarge=_ref.isLarge;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var baseURL='https://image.tmdb.org/t/p/original/';useEffect(function(){axios.get(urlRequest).then(function(res){return setMovies(res.data.results);}).catch(function(error){return console.log(error);});},[urlRequest]);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"row__title\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){if(movie.backdrop_path!==null){return/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(baseURL).concat(isLarge?movie.poster_path:movie.backdrop_path),alt:movie.name,className:\"row__poster \".concat(isLarge?'row__largePoster':'')},movie.id);}})})]});};export default Row;","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Screens/HomeScreen/HomeContent/Row.js"],"names":["React","useState","useEffect","axios","Row","title","urlRequest","isLarge","movies","setMovies","baseURL","get","then","res","data","results","catch","error","console","log","map","movie","backdrop_path","poster_path","name","id"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAO,WAAP,C,wFACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAkC,IAAhCC,CAAAA,KAAgC,MAAhCA,KAAgC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAbC,OAAa,MAAbA,OAAa,CAC1C,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CACAR,SAAS,CAAC,UAAI,CACVC,KAAK,CAACQ,GAAN,CAAUL,UAAV,EACCM,IADD,CACM,SAAAC,GAAG,QAAEJ,CAAAA,SAAS,CAACI,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX,EADT,EAECC,KAFD,CAEO,SAAAC,KAAK,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAF,EAFZ,EAGH,CAJQ,CAIP,CAACX,UAAD,CAJO,CAAT,CAKA,mBAAO,aAAK,SAAS,CAAC,KAAf,wBACH,WAAI,SAAS,CAAC,YAAd,UAA4BD,KAA5B,EADG,cAEH,YAAK,SAAS,CAAC,cAAf,UACKG,MAAM,CAACY,GAAP,CAAW,SAAAC,KAAK,CAAI,CACjB,GAAGA,KAAK,CAACC,aAAN,GAAwB,IAA3B,CAAgC,CAC5B,mBAAO,YAAK,GAAG,WAAKZ,OAAL,SAAeH,OAAO,CAAGc,KAAK,CAACE,WAAT,CAAuBF,KAAK,CAACC,aAAnD,CAAR,CAEP,GAAG,CAAED,KAAK,CAACG,IAFJ,CAGP,SAAS,uBAAiBjB,OAAO,CAAG,kBAAH,CAAwB,EAAhD,CAHF,EACFc,KAAK,CAACI,EADJ,CAAP,CAKH,CACJ,CARA,CADL,EAFG,GAAP,CAeH,CAvBD,CAyBA,cAAerB,CAAAA,GAAf","sourcesContent":["import React, {useState ,useEffect} from 'react'\r\nimport axios from '../../../axios';\r\nimport './Row.css';\r\nconst Row = ({title ,urlRequest, isLarge}) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const baseURL = 'https://image.tmdb.org/t/p/original/'\r\n    useEffect(()=>{\r\n        axios.get(urlRequest)\r\n        .then(res=>setMovies(res.data.results))\r\n        .catch(error=>console.log(error))\r\n    },[urlRequest])\r\n    return <div className='row'>\r\n        <h2 className='row__title'>{title}</h2>\r\n        <div className='row__posters'>\r\n            {movies.map(movie => {\r\n                if(movie.backdrop_path !== null){\r\n                    return <img src={`${baseURL}${isLarge ? movie.poster_path : movie.backdrop_path }`}\r\n                    key={movie.id} \r\n                    alt={movie.name}\r\n                    className={`row__poster ${isLarge ? 'row__largePoster' : ''}`}\r\n                    />\r\n                }\r\n            }   \r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Row;"]},"metadata":{},"sourceType":"module"}
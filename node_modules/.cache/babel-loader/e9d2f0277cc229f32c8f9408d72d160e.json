{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\netflix-clone\\\\src\\\\NetflixClone\\\\Screens\\\\SignInUpScreens\\\\SignInUpContent\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { auth } from '../../../Apis/firebase';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [signUpClicked, setSignUpClicked] = useState(false);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const signUpLink = e => {\n    e.preventDefault();\n    setSignUpClicked(true);\n  };\n\n  const signInButton = e => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value).catch(error => {\n      alert(error);\n    });\n  };\n\n  const Register = e => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value).then(userCredential => {\n      // registered\n      console.log(userCredential);\n    }).catch(error => {\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"signUp__title\",\n      children: [\"Sign \", signUpClicked ? 'Up' : 'In']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: emailRef,\n        type: \"email\",\n        placeholder: \"Email or phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passwordRef,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: signInButton,\n        style: {\n          display: signUpClicked ? 'none' : 'inline'\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: Register,\n        style: {\n          display: signUpClicked ? 'inline' : 'none'\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signUp__new\",\n        children: \"New to Netflix?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signUp__link\",\n        onClick: signUpLink,\n        children: \"Sign up now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"wohagHoYCOR5yS6QGDPnLcuhUBU=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Screens/SignInUpScreens/SignInUpContent/SignUp.js"],"names":["React","useState","useRef","auth","SignUp","signUpClicked","setSignUpClicked","emailRef","passwordRef","signUpLink","e","preventDefault","signInButton","signInWithEmailAndPassword","current","value","catch","error","alert","Register","createUserWithEmailAndPassword","then","userCredential","console","log","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,MAAxB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMM,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMM,WAAW,GAAGN,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAIF,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,IAAI,CAACU,0BAAL,CAAgCN,QAAQ,CAACO,OAAT,CAAiBC,KAAjD,EAAwDP,WAAW,CAACM,OAAZ,CAAoBC,KAA5E,EACCC,KADD,CACQC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAHD;AAIH,GAND;;AAQA,QAAME,QAAQ,GAAIT,CAAD,IAAM;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,IAAI,CAACiB,8BAAL,CAAoCb,QAAQ,CAACO,OAAT,CAAiBC,KAArD,EAA4DP,WAAW,CAACM,OAAZ,CAAoBC,KAAhF,EACCM,IADD,CACOC,cAAD,IAAoB;AACxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,KAJD,EAKCN,KALD,CAKQC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAPD;AASH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,0BAAoCZ,aAAa,GAAE,IAAF,GAAS,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,GAAG,EAAEE,QAAZ;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAmC,QAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,GAAG,EAAEC,WAAZ;AAAyB,QAAA,IAAI,EAAC,UAA9B;AAAyC,QAAA,WAAW,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEI,YAA/B;AAA6C,QAAA,KAAK,EAAE;AAACa,UAAAA,OAAO,EAACpB,aAAa,GAAC,MAAD,GAAU;AAAhC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEc,QAA/B;AAAyC,QAAA,KAAK,EAAE;AAACM,UAAAA,OAAO,EAACpB,aAAa,GAAC,QAAD,GAAY;AAAlC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA,8BAAI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,oBAAyD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,OAAO,EAAEI,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7CD;;GAAML,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React,{useState, useRef} from'react';\r\nimport { auth } from '../../../Apis/firebase'; \r\nimport './SignUp.css';\r\n\r\nconst SignUp = () => {\r\n\r\n    const [signUpClicked ,setSignUpClicked] = useState(false);\r\n\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n\r\n    const signUpLink = (e) => {\r\n        e.preventDefault();\r\n        setSignUpClicked(true);\r\n    };\r\n\r\n    const signInButton = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n        .catch((error) => {\r\n            alert(error);\r\n        }); \r\n    };\r\n\r\n    const Register = (e) =>{\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n        .then((userCredential) => {\r\n          // registered\r\n          console.log(userCredential)\r\n        })\r\n        .catch((error) => {\r\n            alert(error);\r\n        });\r\n     \r\n    }\r\n\r\n    return(\r\n        <div className='signUp'>\r\n            <h1 className='signUp__title'>Sign {signUpClicked? 'Up' : 'In'}</h1>\r\n            <form>\r\n                <input ref={emailRef} type='email' placeholder='Email or phone number' />\r\n                <input ref={passwordRef} type='password' placeholder='Password' />\r\n                <button type='submit' onClick={signInButton} style={{display:signUpClicked?'none' : 'inline'}}>Sign In</button>\r\n                <button type='submit' onClick={Register} style={{display:signUpClicked?'inline' : 'none'}}>Register</button>\r\n            </form>\r\n            <h5><span className='signUp__new'>New to Netflix?</span> <span className='signUp__link' onClick={signUpLink}>Sign up now</span></h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}
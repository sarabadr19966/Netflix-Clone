{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import HomeScreen from\"./Screens/HomeScreen/HomeScreen\";import ProfileScreen from'./Screens/ProfileScreen/ProfileScreen';import SignInUpScreen from'./Screens/SignInUpScreens/SignInUpScreen';import{auth}from'../firebase';import{connect}from'react-redux';import*as actionCreators from'../store/action';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Netflix=function Netflix(props){useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(userAuth){if(userAuth){//logged in\nprops.logIn({uID:userAuth.uid,email:userAuth.email});}else{//logged out\nprops.logOut();}});return unsubscribe;},[]);return/*#__PURE__*/_jsx(_Fragment,{children:!props.user?/*#__PURE__*/_jsx(SignInUpScreen,{}):/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",component:ProfileScreen}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:HomeScreen})]})})});};var mapStateToProps=function mapStateToProps(state){return{user:state.user};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logIn:function logIn(user){return dispatch(actionCreators.login(user));},logOut:function logOut(){return dispatch(actionCreators.logout());}};};export default connect(mapStateToProps,mapDispatchToProps)(Netflix);","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Netflix.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","HomeScreen","ProfileScreen","SignInUpScreen","auth","connect","actionCreators","Netflix","props","unsubscribe","onAuthStateChanged","userAuth","logIn","uID","uid","email","logOut","user","mapStateToProps","state","mapDispatchToProps","dispatch","login","logout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uCAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0CAA3B,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,iBAAhC,C,6IAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvBZ,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,WAAW,CAAGL,IAAI,CAACM,kBAAL,CAAwB,SAACC,QAAD,CAAc,CACtD,GAAGA,QAAH,CAAa,CACT;AACAH,KAAK,CAACI,KAAN,CAAY,CACRC,GAAG,CAAGF,QAAQ,CAACG,GADP,CAERC,KAAK,CAAEJ,QAAQ,CAACI,KAFR,CAAZ,EAIH,CAND,IAMO,CACH;AACAP,KAAK,CAACQ,MAAN,GACH,CACJ,CAXmB,CAApB,CAYA,MAAOP,CAAAA,WAAP,CACH,CAdQ,CAcP,EAdO,CAAT,CAeA,mBAEI,yBACK,CAACD,KAAK,CAACS,IAAP,cAAc,KAAC,cAAD,IAAd,cACG,KAAC,MAAD,wBACA,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,SAAS,CAAEf,aAAxC,EADJ,cAEI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAED,UAAjC,EAFJ,GADA,EAFR,EAFJ,CAcH,CA9BD,CAgCA,GAAMiB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHF,IAAI,CAAGE,KAAK,CAACF,IADV,CAAP,CAGH,CAJD,CAMA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHT,KAAK,CAAG,eAAAK,IAAI,QAAII,CAAAA,QAAQ,CAACf,cAAc,CAACgB,KAAf,CAAqBL,IAArB,CAAD,CAAZ,EADT,CAEHD,MAAM,CAAG,wBAAMK,CAAAA,QAAQ,CAACf,cAAc,CAACiB,MAAf,EAAD,CAAd,EAFN,CAAP,CAIH,CALD,CAOA,cAAelB,CAAAA,OAAO,CAACa,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomeScreen from \"./Screens/HomeScreen/HomeScreen\";\r\nimport ProfileScreen from './Screens/ProfileScreen/ProfileScreen';\r\nimport SignInUpScreen from './Screens/SignInUpScreens/SignInUpScreen';\r\nimport { auth } from '../firebase';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreators from '../store/action';\r\n\r\nconst Netflix = (props) => {\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n            if(userAuth) {\r\n                //logged in\r\n                props.logIn({\r\n                    uID : userAuth.uid,\r\n                    email: userAuth.email\r\n                });\r\n            } else {\r\n                //logged out\r\n                props.logOut();\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    },[])\r\n    return  (\r\n        \r\n        <>\r\n            {!props.user ? <SignInUpScreen/> :\r\n                <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/profile\" component={ProfileScreen} />\r\n                    <Route exact path=\"/\" component={HomeScreen} />\r\n                </Switch>\r\n                </Router>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user : state.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logIn : user => dispatch(actionCreators.login(user)),\r\n        logOut : () => dispatch(actionCreators.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Netflix);"]},"metadata":{},"sourceType":"module"}
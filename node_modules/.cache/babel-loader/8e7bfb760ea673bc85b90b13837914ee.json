{"ast":null,"code":"import _slicedToArray from\"D:/react/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./Banner.css';import requests from'../../../requests';import axios from'../../../axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Banner=function Banner(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];useEffect(function(){axios.get(requests.netflixOriginals).then(function(res){var randomIndex=Math.floor(Math.random()*res.data.results.length);setMovie(res.data.results[randomIndex]);}).catch(function(error){return console.log(error);});},[]);var baseURL='https://image.tmdb.org/t/p/original/';var truncate=function truncate(str,n){return(str===null||str===void 0?void 0:str.length)>n?str.substr(0,n-1)+'...':str;};return/*#__PURE__*/_jsxs(\"header\",{className:\"banner\",style:{backgroundImage:\"url(\".concat(baseURL).concat(movie===null||movie===void 0?void 0:movie.backdrop_path,\")\"),backgroundSize:'cover',backgroundPosition:'top center'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"banner__content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"banner__title\",children:(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name)}),/*#__PURE__*/_jsx(\"button\",{className:\"banner__button\",children:\"Play\"}),/*#__PURE__*/_jsx(\"button\",{className:\"banner__button\",children:\"My List\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"banner__description\",children:truncate(movie===null||movie===void 0?void 0:movie.overview,150)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"banner__fadeBottom\"})]});};export default Banner;","map":{"version":3,"sources":["D:/react/netflix-clone/src/NetflixClone/Screens/HomeScreen/HomeContent/Banner.js"],"names":["React","useState","useEffect","requests","axios","Banner","movie","setMovie","get","netflixOriginals","then","res","randomIndex","Math","floor","random","data","results","length","catch","error","console","log","baseURL","truncate","str","n","substr","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","original_name","overview"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,QAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAmB,gBAAnB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACAL,SAAS,CAAC,UAAM,CACZE,KAAK,CAACI,GAAN,CAAUL,QAAQ,CAACM,gBAAnB,EACCC,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAMC,CAAAA,WAAW,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAcJ,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBC,MAA1C,CAAnB,CACAX,QAAQ,CAACI,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBL,WAAjB,CAAD,CAAR,CACH,CAJD,EAKCO,KALD,CAKO,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EALZ,EAMH,CAPQ,CAOP,EAPO,CAAT,CASA,GAAMG,CAAAA,OAAO,CAAG,sCAAhB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,CAAN,CAAY,CACzB,MAAO,CAAAD,GAAG,OAAH,EAAAA,GAAG,SAAH,QAAAA,GAAG,CAAEP,MAAL,EAAcQ,CAAd,CAAkBD,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAcD,CAAC,CAAC,CAAhB,EAAqB,KAAvC,CAA+CD,GAAtD,CACH,CAFD,CAIA,mBAAO,gBAAQ,SAAS,CAAC,QAAlB,CACH,KAAK,CACD,CACIG,eAAe,eAAUL,OAAV,SAAoBjB,KAApB,SAAoBA,KAApB,iBAAoBA,KAAK,CAAEuB,aAA3B,KADnB,CAEIC,cAAc,CAAG,OAFrB,CAGIC,kBAAkB,CAAG,YAHzB,CAFD,wBASH,aAAK,SAAS,CAAC,iBAAf,wBACI,WAAI,SAAS,CAAC,eAAd,UAA+B,CAAAzB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAE0B,KAAP,IAAgB1B,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAE2B,IAAvB,IAA+B3B,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAE4B,aAAtC,CAA/B,EADJ,cAGQ,eAAQ,SAAS,CAAC,gBAAlB,kBAHR,cAIQ,eAAQ,SAAS,CAAC,gBAAlB,qBAJR,cAMI,WAAI,SAAS,CAAC,qBAAd,UAAqCV,QAAQ,CAAClB,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAE6B,QAAR,CAAkB,GAAlB,CAA7C,EANJ,GATG,cAiBH,YAAK,SAAS,CAAC,oBAAf,EAjBG,GAAP,CAmBH,CApCD,CAsCA,cAAe9B,CAAAA,MAAf","sourcesContent":["import React ,{useState, useEffect} from 'react';\r\nimport './Banner.css';\r\nimport requests  from '../../../requests';\r\nimport axios  from '../../../axios';\r\n\r\nconst Banner = () => {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(requests.netflixOriginals)\r\n        .then(res => {\r\n            const randomIndex =Math.floor(Math.random()*res.data.results.length);\r\n            setMovie(res.data.results[randomIndex]);\r\n        })\r\n        .catch(error => console.log(error))\r\n    },[])\r\n\r\n    const baseURL = 'https://image.tmdb.org/t/p/original/';\r\n\r\n    const truncate = (str, n) => {\r\n        return str?.length > n ? str.substr(0, n-1) + '...' : str;\r\n    };\r\n\r\n    return <header className='banner' \r\n        style={\r\n            {\r\n                backgroundImage : `url(${baseURL}${movie?.backdrop_path})`,\r\n                backgroundSize : 'cover',\r\n                backgroundPosition : 'top center'\r\n            }\r\n        }\r\n    >\r\n        <div className='banner__content'>\r\n            <h1 className='banner__title'>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n                <button className='banner__button'>Play</button>\r\n                <button className='banner__button'>My List</button>\r\n        \r\n            <h1 className='banner__description'>{truncate(movie?.overview, 150)}</h1>\r\n        </div>\r\n        <div className='banner__fadeBottom'/>\r\n    </header>\r\n}\r\n\r\nexport default Banner;"]},"metadata":{},"sourceType":"module"}